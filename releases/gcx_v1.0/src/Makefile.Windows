############################################
### Makefile for the GCX project          
###                                        
### Author: Michael Schmidt                
### - Saarland University Database Group - 
############################################
#                                          
# Hint: Change the CPP flag if you want    
#       to activate extended statistics    
#                                          
# NOTE: Statistics may SIGNIFICANTLY slow  
#       down query evaluation!             
############################################

# FLAGS = -DGENERATE_STATS 

CPP =  g++ -O3 -Wall $(FLAGS)

SOURCES=statistics.cpp main.cpp expression.cpp emptyexpression.cpp constexpression.cpp sequenceexpression.cpp forexpression.cpp someexpression.cpp varstepexpression.cpp varexpression.cpp nodeconstructexpression.cpp ifexpression.cpp updateexpression.cpp condexpression.cpp andcondexpression.cpp orcondexpression.cpp notcondexpression.cpp existscondexpression.cpp nodetestcondexpression.cpp nodeconsttestcondexpression.cpp nodenodetestcondexpression.cpp truecondexpression.cpp pathstepexpression.cpp expenums.cpp prettyprint.cpp environment.cpp buffer.cpp buffernode.cpp tagnode.cpp charnode.cpp clobnode.cpp tagnodestack.cpp buffernodestack.cpp bufferiterator.cpp bufferchilditerator.cpp bufferdescendantiterator.cpp bufferstdchilditerator.cpp bufferstddescendantiterator.cpp bufferstdselfiterator.cpp bufferiteration.cpp loader.cpp varname.cpp pathenvironment.cpp pathexpression.cpp streampreprocessor.cpp streamtracker.cpp fsamap.cpp executor.cpp projectiontree.cpp projectiontreenode.cpp projectionnfa.cpp projectionnfastate.cpp projectionnfatransition.cpp projectiondfatransition.cpp projectiondfa.cpp projectiondfastate.cpp  cmdline.cpp tagmap.cpp intset.cpp intsingleset.cpp intmultiset.cpp buffernodelist.cpp stringhash.cpp role.cpp rolelist.cpp pathsteptextexpression.cpp pathstepnodeexpression.cpp error.cpp
OBJECTS=$(SOURCES:.cpp=.o)

all: gcx

############################### binary
gcx:	$(OBJECTS) query_parser.o query_lexer.o sax.o 
		$(CPP) $(CFLAGS) $(OBJECTS) query_parser.o query_lexer.o sax.o -o gcx

############################### objects
%.o: %.cpp
	$(CPP) $(CFLAGS) -c $<

query_parser.h: query_parser.C

query_parser.C: query_parser.y
	bison -v -b query_parser -d query_parser.y
	copy query_parser.tab.c query_parser.C
	copy query_parser.tab.h query_parser.h

query_parser.o: query_parser.C
	$(CPP) -c query_parser.C

query_lexer.C: query_lexer.l
#	flex  -d -oquery_lexer.C query_lexer.l  # Flex debugging mode
	flex  -oquery_lexer.C query_lexer.l

query_lexer.o: query_lexer.C query_parser.h
	$(CPP) -c query_lexer.C

sax.C: sax.l
	flex sax.l
	sed "s/yy/yyxml/g" < lex.yy.c > sax.C
	del lex.yy.c

sax.o: sax.C loader.h
	$(CPP) -c sax.C

############################### clean 
clean:
	del *.o *~ gcx
	del query_parser.h query_parser.output query_parser.C query_parser.tab.h query_parser.tab.c
	del query_lexer.C
	del sax.C
